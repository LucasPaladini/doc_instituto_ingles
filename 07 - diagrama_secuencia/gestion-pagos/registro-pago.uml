@startuml
actor Usuario

participant "Alumno" as A
participant "Inscripcion" as I
participant "Pago" as P

== Registro de pago ==
Usuario -> P : registrar_pago(alumno_id)
P -> I : verificar_inscripcion(alumno_id)
alt Alumno inscripto
    I --> P : inscripcion_valida()
    P -> A : obtener_datos()
    P -> P : generar_comprobante()
    P -> Usuario : mostrar_confirmacion("Pago registrado y comprobante emitido")
else Alumno no inscripto
    I --> P : inscripcion_invalida()
    P -> Usuario : mostrar_error("El alumno no est√° inscripto")
end
@enduml

